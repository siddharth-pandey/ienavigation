@model ClientPoC.ViewModels.HubCollectionResultsViewModel


@for (int i = 0; i < Model.Result.Items.Count; i++)
{
    @Html.HiddenFor(m => m.Result.Items[i].DetailViewId)
    @Html.HiddenFor(m => m.Result.Items[i].EditViewId)
    @Html.HiddenFor(m => m.Result.Items[i].HubSchemaId)
    @Html.HiddenFor(m => m.Result.Items[i].Name)
    @Html.HiddenFor(m => m.Result.Items[i].SummaryViewId)
    @Html.HiddenFor(m => m.Result.Items[i].Data.ContextId)
    @Html.HiddenFor(m => m.Result.Items[i].Data.ContextSummary)
    @Html.HiddenFor(m => m.Result.Items[i].Data.ContextTypeId)
    @Html.HiddenFor(m => m.Result.Items[i].Data.CreatedBy)
    @Html.HiddenFor(m => m.Result.Items[i].Data.DateCompleted)
    @Html.HiddenFor(m => m.Result.Items[i].Data.DateCreated)
    @Html.HiddenFor(m => m.Result.Items[i].Data.Deleted)
    @Html.HiddenFor(m => m.Result.Items[i].Data.Etag)
    @Html.HiddenFor(m => m.Result.Items[i].Data.ExternalId)
    @Html.HiddenFor(m => m.Result.Items[i].Data.HubId)
    @Html.HiddenFor(m => m.Result.Items[i].Data.IsCompleted)
    @Html.HiddenFor(m => m.Result.Items[i].Data.IsNewObject)
    @Html.HiddenFor(m => m.Result.Items[i].Data.LastUpdated)
    @Html.HiddenFor(m => m.Result.Items[i].Data.LastUpdatedBy)
    @Html.HiddenFor(m => m.Result.Items[i].Data.ReadOnly)
    @Html.HiddenFor(m => m.Result.Items[i].Data.RevisionNumber)
    @Html.HiddenFor(m => m.Result.Items[i].Data.Version)
    if (Model.Result.Items[i].Data != null)
    {
        if (Model.Result.Items[i].Data.Values != null && Model.Result.Items[i].Data.Values.Count > 0)
        {
            for (int j = 0; j < Model.Result.Items[i].Data.Values.Count; j++)
            {
                @Html.HiddenFor(m => m.Result.Items[i].Data.Values[j].DataDictionaryId)
                @Html.HiddenFor(m => m.Result.Items[i].Data.Values[j].LastUpdatedBy)
                @Html.HiddenFor(m => m.Result.Items[i].Data.Values[j].LastUpdatedDate)
                @Html.HiddenFor(m => m.Result.Items[i].Data.Values[j].Path)
            }
        }
    }
}

@if (Model.EditViewsCollection != null && Model.EditViewsCollection.Count > 0)
{
    for (int i = 0; i < Model.EditViewsCollection.Count; i++)
    {
        @Html.HiddenFor(m => m.EditViewsCollection[i].ViewReference)
        @Html.HiddenFor(m => m.EditViewsCollection[i].BackgroundColour)
        if (Model.EditViewsCollection[i].Components != null && Model.EditViewsCollection[i].Components.Count > 0)
        {
            for (int j = 0; j < Model.EditViewsCollection[i].Components.Count; j++)
            {
                @Html.HiddenFor(x => x.EditViewsCollection[i].Components[j].ComponentName)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].ControlId)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Deleted)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Etag)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Height)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Id)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].InstanceId)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].IsContainer)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].IsEnabled)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].IsMandatory)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].IsNewObject)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].IsVisible)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].LastUpdated)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].LastUpdatedBy)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Left)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].LinkedData)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].LocalProperty)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].ParentId)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Path)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].PropertyString)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].RevisionNumber)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Top)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].Width)
                @Html.HiddenFor(m => m.EditViewsCollection[i].Components[j].ZIndex)
            }
        }
    }
}

@if (Model.DetailViewsCollection != null && Model.DetailViewsCollection.Count > 0)
{
    for (int i = 0; i < Model.DetailViewsCollection.Count; i++)
    {
        @Html.HiddenFor(m => m.DetailViewsCollection[i].ViewReference)
        @Html.HiddenFor(m => m.DetailViewsCollection[i].BackgroundColour)
        if (Model.DetailViewsCollection[i].Components != null && Model.DetailViewsCollection[i].Components.Count > 0)
        {
            for (int j = 0; j < Model.DetailViewsCollection[i].Components.Count; j++)
            {
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].ComponentName)
                if (Model.DetailViewsCollection[i].Components[j].Components != null && Model.DetailViewsCollection[i].Components[j].Components.Count > 0)
                {
                    for (int k = 0; k < Model.DetailViewsCollection[i].Components[j].Components.Count; k++)
                    {
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].ComponentName)

                        if (Model.DetailViewsCollection[i].Components[j].Components[k].Components != null && Model.DetailViewsCollection[i].Components[j].Components[k].Components.Count > 0)
                        {
                            for (int l = 0; l < Model.DetailViewsCollection[i].Components[j].Components[k].Components.Count; l++)
                            {
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].ComponentName)

                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].ControlId)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Deleted)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Etag)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Height)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Id)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].InstanceId)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].IsContainer)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].IsEnabled)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].IsMandatory)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].IsNewObject)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].IsVisible)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].LastUpdated)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].LastUpdatedBy)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Left)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].LinkedData)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].LocalProperty)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].ParentId)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Path)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].PropertyString)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].RevisionNumber)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Top)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].Width)
                                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Components[l].ZIndex)
                            }

                        }






                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].ControlId)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Deleted)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Etag)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Height)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Id)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].InstanceId)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].IsContainer)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].IsEnabled)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].IsMandatory)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].IsNewObject)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].IsVisible)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].LastUpdated)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].LastUpdatedBy)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Left)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].LinkedData)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].LocalProperty)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].ParentId)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Path)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].PropertyString)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].RevisionNumber)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Top)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].Width)
                        @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Components[k].ZIndex)
                    }

                }
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].ControlId)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Deleted)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Etag)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Height)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Id)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].InstanceId)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].IsContainer)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].IsEnabled)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].IsMandatory)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].IsNewObject)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].IsVisible)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].LastUpdated)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].LastUpdatedBy)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Left)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].LinkedData)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].LocalProperty)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].ParentId)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Path)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].PropertyString)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].RevisionNumber)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Top)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].Width)
                @Html.HiddenFor(x => x.DetailViewsCollection[i].Components[j].ZIndex)
            }
        }
    }
}

@if (Model.SummaryViewsCollection != null && Model.SummaryViewsCollection.Count > 0)
{
    for (int i = 0; i < Model.SummaryViewsCollection.Count; i++)
    {
        @Html.HiddenFor(m => m.SummaryViewsCollection[i].ViewReference)
        @Html.HiddenFor(m => m.SummaryViewsCollection[i].BackgroundColour)
        if (Model.SummaryViewsCollection[i].Components != null && Model.SummaryViewsCollection[i].Components.Count > 0)
        {
            for (int j = 0; j < Model.SummaryViewsCollection[i].Components.Count; j++)
            {
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].ComponentName)
                if (Model.SummaryViewsCollection[i].Components[j].Components != null && Model.SummaryViewsCollection[i].Components[j].Components.Count > 0)
                {
                    @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Components)

                }

                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].ControlId)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Deleted)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Etag)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Height)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Id)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].InstanceId)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].IsContainer)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].IsEnabled)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].IsMandatory)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].IsNewObject)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].IsVisible)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].LastUpdated)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].LastUpdatedBy)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Left)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].LinkedData)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].LocalProperty)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].ParentId)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Path)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].PropertyString)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].RevisionNumber)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Top)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].Width)
                @Html.HiddenFor(x => x.SummaryViewsCollection[i].Components[j].ZIndex)
            }
        }
    }
}

@Html.HiddenFor(m => m.SearchCriteria.ContextId)
@Html.HiddenFor(m => m.SearchCriteria.CurrentPage)
@Html.HiddenFor(m => m.SearchCriteria.CurrentResultFrom)
@Html.HiddenFor(m => m.SearchCriteria.CurrentResultTo)

@if (Model.SearchCriteria.Hubs != null && Model.SearchCriteria.Hubs.Count > 0)
{
    for (int i = 0; i < Model.SearchCriteria.Hubs.Count; i++)
    {
        @Html.HiddenFor(m => m.SearchCriteria.Hubs[i].Height)
        @Html.HiddenFor(m => m.SearchCriteria.Hubs[i].Width)
        @Html.HiddenFor(m => m.SearchCriteria.Hubs[i].HubId)
    }
}

@Html.HiddenFor(m => m.SearchCriteria.Pages)
@Html.HiddenFor(m => m.SearchCriteria.QueryExecutionTime)
@Html.HiddenFor(m => m.SearchCriteria.ResultsPerPage)
@Html.HiddenFor(m => m.SearchCriteria.SearchDescription)
@Html.HiddenFor(m => m.SearchCriteria.Skip)
@Html.HiddenFor(m => m.SearchCriteria.SkippedResults)
@Html.HiddenFor(m => m.SearchCriteria.TotalResults)