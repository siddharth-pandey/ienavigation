@using ClientPoC.Controllers
@using ClientPoC.Model
@model ClientPoC.ViewModels.HubLayoutViewModel

@if (Model != null)
{
    <form id="@Model.SummaryViewReference.Replace("/", "")" method="POST" action="#/summaryview">
        <div data-view-type="summaryview" data-summaryview-reference="@Model.SummaryViewReference" data-detailsview-requestaddress="@Url.Action("Details", "Home")">
            <div style="position: relative; display: inline-block; width: @(string.Format("{0}px;", Model.ViewWidth))height:@(string.Format("{0}px;", Model.ViewHeight))background-color:@(string.Format("{0};", Model.BackgroundColour))border-width:@(string.Format("{0};", "adsf"))border-color:@(string.Format("{0};", "adf"))">

                @if (Model.Components != null && Model.Components.Count > 0)
                {
                    for (int i = 0; i < Model.Components.Count; i++)
                    {
                        @*@Html.HiddenFor(x => x.Components[i])
                            @Html.HiddenFor(x => x.Components[i].ComponentName)
                            @Html.HiddenFor(x => x.Components[i].Components)
                            @Html.HiddenFor(x => x.Components[i].ControlId)
                            @Html.HiddenFor(x => x.Components[i].Deleted)
                            @Html.HiddenFor(x => x.Components[i].Etag)
                            @Html.HiddenFor(x => x.Components[i].Height)
                            @Html.HiddenFor(x => x.Components[i].Id)
                            @Html.HiddenFor(x => x.Components[i].InstanceId)
                            @Html.HiddenFor(x => x.Components[i].IsContainer)
                            @Html.HiddenFor(x => x.Components[i].IsEnabled)
                            @Html.HiddenFor(x => x.Components[i].IsMandatory)
                            @Html.HiddenFor(x => x.Components[i].IsNewObject)
                            @Html.HiddenFor(x => x.Components[i].IsVisible)
                            @Html.HiddenFor(x => x.Components[i].LastUpdated)
                            @Html.HiddenFor(x => x.Components[i].LastUpdatedBy)
                            @Html.HiddenFor(x => x.Components[i].Left)
                            @Html.HiddenFor(x => x.Components[i].LinkedData)
                            @Html.HiddenFor(x => x.Components[i].LocalProperty)
                            @Html.HiddenFor(x => x.Components[i].ParentId)
                            @Html.HiddenFor(x => x.Components[i].Path)
                            @Html.HiddenFor(x => x.Components[i].PropertyString)
                            @Html.HiddenFor(x => x.Components[i].RevisionNumber)
                            @Html.HiddenFor(x => x.Components[i].Top)
                            @Html.HiddenFor(x => x.Components[i].Width)
                            @Html.HiddenFor(x => x.Components[i].ZIndex)*@

                        @Html.DisplayFor(x => x.Components[i])
                    }
                }

                @Html.HiddenFor(m => m.SummaryViewReference)
                @Html.HiddenFor(m => m.SummaryViewId)
                @Html.HiddenFor(m => m.DetailViewId)
                @Html.HiddenFor(m => m.EditViewId)
                @Html.HiddenFor(m => m.HubDataId)
                @Html.HiddenFor(m => m.HubSchemaId)
                @Html.HiddenFor(m => m.Width)
                @Html.HiddenFor(m => m.Height)

                @if (Model.DataValues != null && Model.DataValues.Count > 0)
                {
                    for (int i = 0; i < Model.DataValues.Count; i++)
                    {
                        @Html.HiddenFor(m => m.DataValues[i].DataDictionaryId)
                        @Html.HiddenFor(m => m.DataValues[i].LastUpdatedBy)
                        @Html.HiddenFor(m => m.DataValues[i].LastUpdatedDate)
                        @Html.HiddenFor(m => m.DataValues[i].Path)
                        @Html.HiddenFor(m => m.DataValues[i].Value)
                    }
                }


                @*@Html.HiddenFor(m => m.BackgroundColour)
                    @Html.HiddenFor(m => m.BorderColour)
                    @Html.HiddenFor(m => m.BorderThickness)
                    @Html.HiddenFor(m => m.Height)
                    @Html.HiddenFor(m => m.Orientation)
                    @Html.HiddenFor(m => m.RotationLayouts)*@ @*@Html.HiddenFor(m => m.Type)

                        @if (Model.ViewContexts != null && Model.ViewContexts.Count > 0)
                        {
                            for (int i = 0; i < Model.ViewContexts.Count; i++)
                            {
                                @Html.HiddenFor(m => m.ViewContexts[i].Key)
                                @Html.HiddenFor(m => m.ViewContexts[i].Description)
                            }
                        }

                        @if (Model.ViewDeviceTypes != null && Model.ViewDeviceTypes.Count > 0)
                        {
                            for (int i = 0; i < Model.ViewDeviceTypes.Count; i++)
                            {
                                @Html.HiddenFor(m => m.ViewDeviceTypes[i].Key)
                                @Html.HiddenFor(m => m.ViewDeviceTypes[i].Description)
                            }
                        }

                        @if (Model.ViewRoles != null && Model.ViewRoles.Count > 0)
                        {
                            for (int i = 0; i < Model.ViewRoles.Count; i++)
                            {
                                @Html.HiddenFor(m => m.ViewRoles[i].Key)
                                @Html.HiddenFor(m => m.ViewRoles[i].Description)
                            }
                        }
                        @Html.HiddenFor(m => m.Width)*@

                </div>
            </div>
            <input type="submit" value="submit" />
        </form>
}

<script type="text/javascript">

    //$(document).ready(function () {

    //    $('div[data-view-type="summaryview"]').on('click', function (e) {
    //        var formId = $(this).closest('form').prop('id');

    //        $('form#' + formId).submit();
    //        return false;
    //    });
    //});

</script>